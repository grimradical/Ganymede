<!--
    Ganymede GASHARL schema kit Ant build file

    Last Revision Changed: $Rev$
    Last Changed By: $Author$
    Last Mod Date: $Date$
    SVN URL: $HeadURL$

    Deepak Giridharagopal, deepak@arlut.utexas.edu
-->

<project name="gasharl" default="build" basedir=".">

  <!-- 
    Project-wide settings. All directories are relative to the project
    directories.
  -->

  <property name="src.dir" value="src"/>
  <property name="lib.dir" value="lib"/>

  <!-- Build directories -->
  <property name="build.dir" value="build"/>
  <property name="build.doc" value="doc"/>
  <property name="build.classes" value="${build.dir}/classes"/>
  <property name="build.lib" value="${build.dir}/lib"/>

  <!-- Global settings -->
  <property name="debug.flag" value="on"/>
  <property name="debug.level" value="source,lines,vars"/>

  <!-- Global properties for javac -->
  <property name="build.compiler" value="modern"/>

  <path id="classpath">
    <fileset dir="${lib.dir}">
      <include name="**/*.jar"/>
    </fileset>
    <fileset dir="../../lib">
      <include name="**/*.jar"/>
    </fileset>
  </path>

  <!-- === Targets ahoy ===  -->
  <target name="help">
    <echo>ant rules
---------

build         - Compiles the full schema kit but does not build jar files.  Useful for testing build.
jars          - Produces the jar files for the server, client, and admin console
javadoc       - Builds the java doc tree
clean         - Cleans the build class tree
javadoc_clean - Cleans the java doc tree
veryclean     - Does all of distclean, javadoc_clean, clean
total         - Complete strip and rebuild
</echo>
  </target>


  <target name="prepare">
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${build.lib}"/>
    <mkdir dir="${build.doc}"/>
    <tstamp/>
    <echo message="Chaining top-level build"/>
    <ant dir="../../" inheritall="false" target="main"/>
  </target>


  <target name="build" depends="main">
    <echo>
Class files rebuilt.  Don't forget to run 'ant jars' if you want to
refresh the jar files.
</echo>
  </target>


  <target name="main" depends="prepare">
    <!-- main is intended as an unadvertised target, so that we can provide
         the user with the 'don't forget the jars' advice if they run ant
         or ant build. -->

    <mkdir dir="${build.classes}"/>
    <echo message="Building schema kit"/>
    <javac destdir="${build.classes}"
           debug="${debug.flag}"
           debuglevel="${debug.level}"
           nowarn="true"
           target="1.5"
           source="1.5"
           includeantruntime="false"
           deprecation="on">
           <src path="${src.dir}"/>
           <classpath refid="classpath"/>
           <classpath path="../../build/classes"/>
    </javac>
  </target>
  

  <target name="jars" depends="main">
    <!-- Copy over any jars used in the build -->
    <copy todir="${build.lib}">
      <fileset dir="${lib.dir}"/>
    </copy>

    <jar jarfile="${build.lib}/custom.jar"
      basedir="${build.classes}">
      <include name="**/*"/>
    </jar>
  </target>


  <target name="javadoc" depends="prepare,javadoc_clean">
    <mkdir dir="${build.doc}"/>
    <javadoc sourcepath="${src.dir}"
             packagenames="*"
             destdir="${build.doc}"
             author="true"
             version="true"
             use="true">
             <classpath refid="classpath"/>
             <classpath path="../../build/ganymede"/>
    </javadoc>
  </target>
  

  <target name="clean">
    <delete failonerror="false">
      <fileset dir="${build.classes}" includes="**/*.class"/>
      <fileset dir="${build.lib}" includes="*.jar"/>
    </delete>
  </target>
  

  <target name="javadoc_clean">
    <delete>
      <fileset dir="${build.doc}" includes="**/*"/>
    </delete>
  </target>


  <target name="veryclean" depends="javadoc_clean,clean"/>
  

  <target name="total" depends="veryclean,main,jars,javadoc"/>
  
</project>
