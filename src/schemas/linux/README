Ganymede Developer Release 4d
September 8, 1998
LINUX README
----------------------------

The schema classes and source code found in this directory implement a
database definition for holding basic Linux compatible
passwd/group information

1) custom.jar

   This java class archive contains all the custom code for a set
   of plug-in objects that we have created to provide 
   intelligence concerning the Linux compatible passwd/group data
   structures to the Ganymede database.

2) The source code for the plug-in classes that are contained in
   custom.jar

3) A ganymede.schema file in the custom_src directory.  This file
   contains the object definitions for the passwd/group objects that
   our Linux schema operates on.  This file was copied into
   db/ganymede.db by the installServer.perl script at server install
   time.

4) A loader directory that contains the code necessary to load a
   Ganymede database from Linux-compatible passwd/group files.

   The following Linux/etc files are supported:

     passwd
     group

   Your copies of the above files should be placed in the input
   directory.  You can then run the runDirectLoader script
   to generate the file loader/db/ganymede.db.  This file will
   contain all the information from your Linux files.

   Note that unlike the GASH schema, the Linux loader code has no way
   of identifying or setting up privileged administrators.  If you
   use the Linux schema, you will wind up needing to log in to Ganymede
   with the superuser accout (default username: supergash, pass:
   newpass).

   Once you have logged in with supergash, you can create new owner
   groups and permission objects, then edit your admin user accounts
   to give them admin personae to work with.

NOTE: The passwd handling code assumes that the gcos field will be
compatible with Linux style formatting:

ukiyo:8ACND9YVABCDA:2607:666:Ukiyo the Cat,23a Some Place ,officeph,homeph:/usr/home/ukiyo:/bin/bash

If you are using another version of UNIX, you may need to edit
custom_src/LinuxBuilderTask.java and loader/source/User.java to make the
nisonly custom code write and read your gcos field variant
appropriately.

Please see the file doc/privs.html for details on how ownership,
permissions, and admin personae work in Ganymede. 
   

Builder Notes
-------------

Whenever transactions are committed, the LinuxBuilderTask by default
will write revised copies of passwd and group to
<installdir>/db/out.  LinuxBuilderTask will then try to run a script
called <installdir>/db/out/linux_builder.  We have provided a sample
script that might be appropriate for you, called linux_builder.sample.

If you want to use linux_builder.sample, copy it to
<installdir>/db/out/linux_builder, and the LinuxBuilderTask will run
it after it writes out the passwd and group files.
