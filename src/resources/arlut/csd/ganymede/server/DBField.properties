# DBField.properties
#
# A default localization file for the Ganymede server
#
# Note: All single quotes must be doubled for escaping.. so "can't" becomes "can''t".
#
# Created: 20 September 2004

#
# global
#

global.no_write_perms = Can''t change field {0} in object {1}, due to a lack of permissions or the object being in a non-editable state.
global.no_read_perms = Don''t have permission to read field {0} in object {1}
global.oops_vector = Scalar method called on a vector field: {0} in object {1}
global.oops_scalar = Vector method called on a scalar field: {0} in object {1}
global.bad_unmark = Error encountered attempting to dissociate reserved value {0} from field {1}.  This may be due to a server error, or it may be due to a non-interactive transaction currently at work trying to shuffle namespace values between multiple objects.  In the latter case, you may be able to succeed at this operation after the non-interactive transaction gives up.
global.out_of_range = Invalid index {0,number,#} for array access on field {1} in object {2}.

#
# copyFieldTo
#

copyFieldTo.copy_error_sub = Copy field error
copyFieldTo.no_read = Can''t copy from field {0} in object {1}, due to a lack of read privileges.
copyFieldTo.no_write = Can''t copy to field {0} in object {1}, due to a lack of write privileges.

#
# setUndefined
#

setUndefined.no_perm_vect = DBField.setUndefined(): couldn''t clear vector elements from field {0} in object {1}, due to a lack of write permissions.

#
# unmark()
#

unmark.testunmark_problem = Error: testunmark() / unmark() inconsistency

#
# getConflictDialog
#

getConflictDialog.errorTitle = Server: Error in {0}

getConflictDialog.persistentError = This action could not be completed because "{0}" is already being used.\n\n{1} "{2}" contains this value in its {3} field.\n\nYou can choose a different value here, or you can try to edit or delete the "{2}" object to remove the conflict.

getConflictDialog.transactionError = This action could not be completed because "{0}" is currently being manipulated in a concurrent transaction.\n\n{1} "{2}" contains this value in its {3} field.\n\nYou can choose a different value here, or you can try to edit or delete the "{2}" object to remove the conflict.

getConflictDialog.simpleError = Value {0} already taken in namespace.

#
# validateContents
#

validateContents.too_big_array = Field {0} in object {1} contains more elements ({2,number,#}) than is allowed ({3,number,#}).

#
# setElementLocal
#

setElementLocal.bad_null = Null value passed to setElement() on field {0} in object {1}.

#
# addElement
#

addElement.bad_null = Null value passed to addElement() on field {0} in object {1}.
addElement.overflow = addElement() Error: Field {0} in object {1} is already at or beyond its maximum allowed size.

#
# addElements
#

addElements.bad_null = Null or empty Vector passed to addElements() on field {0} in object {1}.
addElements.self_add = Error, attempt to add self elements to field {0} in object {1}.
addElements.overflow = addElements() Error: Field {0} in object {1} can''t take {2,number,#} new values..\n\
It already has {3,number,#} elements, and may not have more than {4,number,#} total.
addElements.unapproved_title = addElements() Error
addElements.warning = Warning

#
# deleteElement
#

deleteElement.bad_null = deleteElement() Error: Can''t delete null value from field {0} in object {1}.
deleteElement.missing_element = deleteElement() Error: Value ''{0}'' not present to be deleted from field {1} in object {2}.

#
# deleteElements
#

deleteElements.bad_null = Null or empty Vector passed to deleteElements() on field {0} in object {1}.
deleteElements.self_delete = Error, attempt to delete self elements from field {0} in object {1}.
deleteElements.missing_elements = deleteElements() Error: Values ''{0}'' not present to be deleted from field {1} in object {2}.

#
# getVectorDiff
#

getVectorDiff.null_old = Bad call to getVectorDiff() on field {0} in object {1}.  oldField is null.
getVectorDiff.bad_type = Bad call to getVectorDiff() on field {0} in object {1}.  Incompatible fields.

#
# getDuplicateValueDialog
#

getDuplicateValueDialog.error_in_method_title = Server: Error in {0}
getDuplicateValueDialog.error_body = This action could not be performed because "{0}" is already contained in field {1} in object {2}.

#
# getDuplicateValuesDialog
#

getDuplicateValuesDialog.error_body = This action could not be performed because "{0}" are already contained in field {1} in object {2}.
