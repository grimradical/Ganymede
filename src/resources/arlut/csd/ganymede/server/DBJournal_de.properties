# DBJournal.properties
#
# A default localization file for the Ganymede server
#
# Note: All single quotes must be doubled for escaping.. so "can't" becomes "can''t".
#
# Created: 20 December 2004

#
# init
#

#init.badstore = bad parameter, store == null
init.badstore = Falscher Parameter: store == null
#init.badfile = bad parameter, filename == null
init.badfile = Falscher Parameter: Dateiname == null
#init.initing = Initializing DBStore Journal: {0}
init.initing = Initialisiere DBStore-Journal: {0}
#init.creating = Creating Journal File
init.creating = Erzeuge Journal-Datei
#init.writing = Writing DBStore Journal header
init.writing = Schreibe  DBStore-Journal-Header
#init.opening = Opening Journal File for Append
init.opening = Öffne Journal-Datei zum Hinzufügen
#init.badheader = DBJournal constructor: open string mismatch
init.badheader = DBJournal constructor: open string passt nicht

#
# isAtLeast
#

#isAtLeast.notloaded = DBJournal.isAtLeast() called before journal loaded.
isAtLeast.notloaded = DBJournal.isAtLeast() wurde vor Laden des Journals aufgerufen.

#
# isLessThan
#

#isLessThan.notloaded = DBJournal.isLessThan() called before journal loaded.
isLessThan.notloaded = DBJournal.isLessThan() wurde vor Laden des Journals aufgerufen.

#
# isAtRev
#

#isAtRev.notloaded = DBJournal.isAtRev() called before journal loaded.
isAtRev.notloaded = DBJournal.isAtRev() wurde vor Laden des Journals aufgerufen.

#
# isBetweenRevs
#

#isBetweenRevs.notloaded = DBJournal.isBetweenRevs() called before journal loaded.
isBetweenRevs.notloaded = DBJournal.isBetweenRevs() wurde vor Laden der Journals aufgerufen.

#
# reset
#

#reset.resetting = DBJournal: Resetting Journal File
reset.resetting = DBJournal: Journal-Datei wird zurückgesetzt
#reset.savingold = DBJournal: saving old Journal as {0}
reset.savingold = DBJournal: Altes Journal wird als {0} gespeichert
#reset.freshness = DBJournal: creating fresh Journal {0}
reset.freshness = DBJournal: Neues Journal {0} wird erzeugt
#reset.logstring = Ganymede Journal Reset
reset.logstring = Reset Ganymede Journal

#
# load
#

#load.openmismatch = DBJournal.load(): Transaction open string mismatch
load.openmismatch = DBJournal.load(): Transaktion open string passen nicht
#load.okmatch = DBJournal.load(): Transaction open string match OK
load.okmatch = DBJournal.load(): Transaktion open string passen
#load.readingtime = Reading transaction time
load.readingtime = Lese Transaktionsdauer
#load.readingobjcount = Reading object count
load.readingobjcount = Lese Zahl der Objekte
#load.showtime = Transaction: {0}
load.showtime = Transaktion: {0}
#load.readingopcode = Reading operation code for object {0}
load.readingopcode = Lese operation code für Objekt {0}
#load.readingtype = Reading object type for object {0}
load.readingtype = Lese Objekt-Typ für Objekt {0}
#load.readingcreated = Reading created object {0}
load.readingcreated = Lese erzeugtes Objekt {0}
#load.create = Create: {0}
load.create = Erzeuge: {0}
#load.readingedited = Reading edited object {0}
load.readingedited = Lese bearbeitetes Objekt {0}
#load.deltaread = Delta read:\n\t{0}\n
load.deltaread = Lese Delta:\n\t{0}\n
#load.original = DBJournal.load(): original object, before delta edit:
load.original = DBJournal.load(): Originalobjekt, vor Delta:
#load.oddmod = DBJournal.load(): modified object in the journal does not previously exist in DBStore.
load.oddmod = DBJournal.load(): Das veränderte Objekt im Journal existierte vorher im DBStore nicht.
#load.postdelta = DBJournal.load(): object after delta edit:
load.postdelta = DBJournal.load(): Objekt nach Delta:
#load.readingdeleted = Reading deleted object {0}
load.readingdeleted = Lese gelöschtes Objekt {0}
#load.delete = Delete: {0}:{1}
load.delete = Lösche: {0}:{1}
#load.readingclosed = Reading close transaction information
load.readingclosed = Lese close transaction Information
#load.badclosed = Transaction close timestamp mismatch
load.badclosed = Zeitstempel für Transaktionsabschluss passen nicht
#load.finished = Finished transaction
load.finished = Transaktion abgeschlossen
#load.success = Transaction {0} successfully read from Journal.\nIntegrating transaction into DBStore memory image.
load.success = Transaktion {0} wurde erfolgreich aus dem Journal gelesen.\nSie wird jetzt in das DBStore-Speicherabbild integriert.
#load.processing = Processing {0} objects
load.processing = Verarbeite {0} Objekte
#load.allclear = All transactions processed successfully
load.allclear = Alle Transaktionen erfolgreich bearbeitet
#load.failure = DBJournal file unexpectedly ended: state = {0}
load.failure = DBJournal-Datei endet unerwartet: Status = {0}
#load.notfinalized = DBJournal: transaction {0} not finalized in journal, rejecting
load.notfinalized = DBJournal: Transaktion {0} im Journal ist nicht abgeschlossen. Sie wird zurückgewiesen

#
# writeTransaction
#

#writeTransaction.writing = Writing transaction to the Journal : {0}
writeTransaction.writing = Schreibe Transaktion ins Journal: {0}
#writeTransaction.objcount = Objects in Transaction: {0}
writeTransaction.objcount = Die Transaktion umfasst {0} Objekte
#writeTransaction.creating = Creating object:
writeTransaction.creating = Erzeuge Objekt:
#writeTransaction.wroteobjedit = Wrote object edit record:\n\t{0}
writeTransaction.wroteobjedit =  Datensatz über Objekt-Bearbeitung geschrieben:\n\t{0}
#writeTransaction.wroteobjdel = Wrote object deletion record:\n\t{0} : {1}
writeTransaction.wroteobjdel = Datensatz über Objekt-Löschung geschrieben:\n\t{0} : {1}
#writeTransaction.dropping = Dropping object:
writeTransaction.dropping = Verwerfe Objekt:
#writeTransaction.written = Transaction {0} persisted to Journal.
writeTransaction.written = Transaktion  {0} im Journal gespeichert.
#writeTransaction.badundo = ***\n*** Error in DBJournal.writeTransaction()!  Couldn''t undo a transaction in the\njournal file*** after catching an exception!\n***\n*** The journal may not be completely recoverable!\n\n{0}
writeTransaction.badundo = ***\n*** Fehler in DBJournal.writeTransaction()!  Kann Transaktion im Journal nicht zurücknehmen\n*** Exception aufgetreten!\n***\n*** Das Journal kann vielleicht nicht komplett wiederhergestellt werden!\n\n{0}

#
# readHeaders
#

#readHeaders.loading = DBJournal: Loading transactions from {0}
readHeaders.loading = DBJournal: Lade Transaktionen aus {0}
#readHeaders.badid = Error, id_string mismatch.. wrong file type?
readHeaders.badid = Fehler: id_string passt nicht. Falscher Dateityp?
#readHeaders.badversion = Error, journal version mismatch.. wrong file type?
readHeaders.badversion = Fehler: Journal-Version passt nicht. Falscher Dateityp?
#readHeaders.created = DBJournal file created {0}
readHeaders.created = DBJournal-Datei erzeugt {0}

