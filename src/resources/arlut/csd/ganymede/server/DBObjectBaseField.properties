# DBObjectBaseField.properties
#
# A default localization file for the Ganymede server
#
# Note: All single quotes must be doubled for escaping.. so "can't" becomes "can''t".
#
# Created: 21 February 2005
#
# Last Revision Changed: $Rev$
# Last Changed By: $Author$
# Last Mod Date: $Date$
# SVN URL: $HeadURL$

#
# global
#

global.xmlErrorTitle = XML
global.badItemTree = bad XMLItem tree:\n{0}

#
# setXML
#

setXML.bad_nextitem = DBObjectBaseField.setXML(): next element != open fielddef: {0}
setXML.no_id = fielddef does not define id attr:\n{0}
setXML.bad_id = fielddef defines an id attr out of range.. must be >= 100 for custom fields:\n{0}
setXML.id_failure = fielddef could not have its id set:\n{0}\n{1}
setXML.name_failure = fielddef could not have its name set:\n{0}\n{1}
setXML.bad_commentChild = unrecognized children in comment block:\n{0}
setXML.dup_type = redundant type definition for this field:\n{0}
setXML.missing_type = typedef tag does not contain type attribute:\n{0}
setXML.unrecognized_type = typedef tag does not contain recognizable type attribute: {0} in fielddef tree:\n{1}
setXML.unrecognized_item = unrecognized XML item: {0} in fielddef tree:\n{1}
setXML.failed_field_class = fielddef could not set class name:\n{0}\n{1}
setXML.failed_field_comment = fielddef could not set comment:\n{0}\n{1}

#
# doStringXML
#

doStringXML.bad_string_typedef_item = Unrecognized string typedef entity: {0}\nIn field def:\n{1}
doStringXML.bad_vector_op = fielddef could not set vector bit to {0}:\n{1}\n{2}
doStringXML.bad_vector_limit = fielddef could not set vector maximum size: {0,number,#}\n{1}\n{2}
doStringXML.bad_min_length = fielddef could not set min length: {0,number,#}\n{1}\n{2}
doStringXML.bad_max_length = fielddef could not set max length: {0,number,#}\n{1}\n{2}
doStringXML.bad_ok_chars = fielddef could not set ok chars: {0}\n{1}\n{2}
doStringXML.bad_bad_chars = fielddef could not set bad chars: {0}\n{1}\n{2}
doStringXML.bad_regexp = fielddef could not set regular expression: {0}\n{1}\n{2}
doStringXML.bad_regexp_desc = fielddef could not set regular expression description: {0}\n{1}\n{2}
doStringXML.bad_multiline = fielddef could not set multiline: {0}\n{1}\n{2}
doStringXML.bad_namespace = fielddef could not set namespace: {0}\n{1}\n{2}

#
# doBooleanXML
#

doBooleanXML.bad_boolean_typedef_item = Unrecognized boolean typedef entity: {0}\nIn field def:\n{1}
doBooleanXML.bad_labeled_bit = fielddef could not set labeled bit to {0}:\n{1}\n{2}
doBooleanXML.bad_true_label = fielddef could not set true label to {0}\n{1}\n{2}
doBooleanXML.bad_false_label = fielddef could not set false label to {0}\n{1}\n{2}

#
# genWarning1
#

genWarning1.title = Schema Editor
genWarning1.text = The requested change in this field''s allowed options has been made and will be put into effect if you commit your schema change.\n\n\
This schema change will only affect new values entered into this field in the database.  Pre-existing fields of this kind in the database may or may not \
satisfy your new constraint.
genWarning1.ok = OK

#
# genWarning2
#

genWarning2.title = Schema Editor
genWarning2.text = The requested change in this field''s allowed options has been made and will be put into effect if you commit your schema change.\n\n\
Because this schema change is being made while there are fields of this type active in the database, there may be a chance that this change will \
affect database consistency.
genWarning2.ok = OK
