# DBEditSet.properties
#
# A default localization file for the Directory Droid server
#
# Created: 2 June 2004
#
# Last Revision Changed: $Rev$
# Last Changed By: $Author$
# Last Mod Date: $Date$
# SVN URL: $HeadURL$

#
# global
#

global.already = already committed or released

#
# constructors
#

#
# addObject()
#

addObject.cant_add = Can't add objects to the transaction during commit.

#
# popCheckpoint()
#

popCheckpoint.no_checkpoint = DBEditSet.popCheckpoint(): couldn't find checkpoint for {0}\nCurrently registered checkpoints:

#
# rollback()
#

rollback.non_interactive = rollback() called in non-interactive transaction

#
# commit()
#

commit.forced_abort = Forced Transaction Abort
commit.forced_abort_text = The server ran into a non-reversible error while processing this transaction and forced an abort.

# the following message is also used in commit_lockBases

commit.commit_failure = Transaction commit failure
commit.commit_failure_text = Couldn't commit transaction, exception caught: {0}

#
# commit_lockBases()
#

commit_lockBases.wLock = Error!  DBEditSet {0} commit already has writeLock established!
commit_lockBases.interrupted = DBEditSet.commit(): lock aborted, commit failed, releasing transaction for {0}
commit_lockBases.wLock_refused = Couldn't commit transaction, our write lock was denied.. server goind down?

#
# commit_checkObjectMissingFields()
#

commit_checkObjectMissingFields.missing_fields = Error, required fields not filled in
commit_checkObjectMissingFields.missing_fields_text = Error, {0} object {1} has not been completely filled out.  The following fields need to be filled in before this transaction can be committed:\n\n

#
# commit_createLogEvent()
#

commit_createLogEvent.embedded_modified = {0} {1}'s {2} '{3}', <{4}> was modified.\n\n{5}
commit_createLogEvent.modified = {0} {1}, <{2}> was modified.\n\n{3}
commit_createLogEvent.embedded_created = {0} {1}'s {2} '{3}', <{4}> was created.\n\n{5}
commit_createLogEvent.created = {0} {1}, <{2}> was created.\n\n{3}
commit_createLogEvent.embedded_deleted = {0} {1}'s {2} '{3}', <{4}> was deleted.\n\n{5}\n
commit_createLogEvent.deleted = {0} {1}, <{2}> was deleted.\n\n{3}\n
commit_createLogEvent.embedded_deleted_nodiff = {0} {1}'s {2} '{3}', <{4}> was deleted.\n\n
commit_createLogEvent.deleted_nodiff = {0} {1}, <{2}> was deleted.\n\n

#
# commit_persistTransaction()
#

commit_persistTransaction.error = Couldn't commit transaction, couldn't write transaction to disk
commit_persistTransaction.error_text = Couldn't commit transaction, the server may have run out of disk space.  Couldn't write transaction to disk.
commit_persistTransaction.exception = Couldn't commit transaction, IOException caught writing journal
commit_persistTransaction.exception_text = Couldn't commit transaction, the server may have run out of disk space.\n\n{0}
