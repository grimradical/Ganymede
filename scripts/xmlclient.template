#!/opt/bin/perl
#
# Ganymede XML client script
#
# Usage: xmlclient username=<username> [password=<password>] <xmlfilename>
#
# Last Revision Changed: $Rev$
# Last Changed By: $Author$
# Last Mod Date: $Date$
#
# Module by: Jonathan Abbey, jonabbey@arlut.utexas.edu, ARL:UT
#
##############################################################

## This section is customized by the client install script

# These lines should be in the form X=Y, with nothing else on
# the line.. they are customized by the installClient.perl
# script, and transformed into valid perl.
#
# Yes, I know the template doesn't look like valid perl.

JAVA=/opt/bin/java
CLASSPATH=/v/site/packages/ganymede/etc/ganymede.jar
PROPERTIES=/opt/depot/ganymede/etc/ganymede.properties

###############################################

$ENV{'CLASSPATH'} = $CLASSPATH;

#
# parse argv
#

@my_args = @ARGV;

# On Unix-style systems, Perl receives the command line arguments
# after they have already been broken apart following the shell's
# rules.  This may allow whitespace embedded in arguments, which is
# what we want for the xmlclient, so that we can handle Sync Channel
# names with spaces.
#
# Java can't deal with that, though, so we'll go through and do a
# space to html-style encoding.

foreach $arg (@my_args) {
  $arg =~ s/ /%20/g;

  $arg =~ s/\'/\\\\\'/g;	# backslash escape any single ticks in the argument
  $arg =~ s/(.*)/\'$1\'/;	# then wrap it with more single ticks
}

# Thank you as well, java, for not having any way to turn off
# character echo.

system("stty -echo; $JAVA arlut.csd.ganymede.client.xmlclient properties=$PROPERTIES @my_args;SAVE=\$?;stty echo;exit \$SAVE");

$exit_value = $? >> 8;
exit $exit_value;
