#!/opt/bin/perl5
#
# sync_tree.admin
#
# $Revision: 1.10 $
# $Date: 1999/07/08 04:25:19 $
#
# This perl script is designed to create a tree of files
# suitable for jar'ing into a downloadable archive.  Only
# those files that the admin Console needs are to be downloaded.
#
#------------------------------------------------------------

# What classes in the ganymede package are necessary for the admin console?

# We need Client and GanymedeScheduler here so that the RMI class
# loader will resolve things properly.. weirdness.

@ganymede_classes = ("Admin", "AdminEntry", "Client", "GanymedeScheduler",
		     "Base", "BaseEditor", "BaseField", "BaseFieldEditor", "BaseNode",
		     "CatTreeNode", "Category", "CategoryEditor", "CategoryNode",
		     "NameSpaceEditor",
		     "FieldNode",
		     "Invid", "NameSpace",
		     "GASHAdmin", "GASHAdminFrame",
		     "Server", "Session", "SpaceNode",
		     "ObjectHandle", "Ganymediator", "GanymediatorWizard",
		     "GanymedeConfig", "adminSession",
		     "SchemaEdit", "scheduleHandle", "ReturnVal", "db_object",
		     "GASHSchema", "iAdmin", "iAdmin_Skel");

# What directory are we handling?

chdir("<#CLASSDIR#>/admin_classes/arlut/csd/ganymede") || die ("Couldn't change dir");

# Clean it out

system("rm -rf *");

# Now the class families that we need to finish up

print "\nLinking admin classes from arlut.csd.ganymede\n\n";

foreach $family (@ganymede_classes) {
  opendir SOURCEDIR, "<#CLASSDIR#>/arlut/csd/ganymede" or die "couldn't open dir for families";
  @classes = grep /^$family[\$\.].*\.?class$/, readdir SOURCEDIR;
  closedir SOURCEDIR;
  
  foreach $file (@classes) {
    print "Linking " . $file . "\n";
    
    $result = link ("<#CLASSDIR#>/arlut/csd/ganymede/".$file, $file);
    
    if (!$result){
      print "$! -- $file\n";
    }
  }
}

# Now we need to link in any stub classes

print "\nAttempting to link admin stubs\n\n";

opendir SOURCEDIR, "<#CLASSDIR#>/arlut/csd/ganymede" or die "couldn't open dir for stubs";
@stubs = grep /_Stub/, readdir SOURCEDIR;
closedir SOURCEDIR;

foreach $file (@stubs) {
  print "Linking " . $file . "\n";

  $result = link ("<#CLASSDIR#>/arlut/csd/ganymede/".$file, $file);

  if (!$result){
    print "$! -- $file\n";
  }
}

# Link the nice picture we use.

link("<#CLASSDIR#>/arlut/csd/ganymede/admin.jpg", "admin.jpg");

# Now we need to link in any gif files

print "\nAttempting to link admin gifs\n\n";

opendir SOURCEDIR, "<#CLASSDIR#>/arlut/csd/ganymede" or die "couldn't open dir for stubs";
@gifs = grep /\.gif/, readdir SOURCEDIR;
closedir SOURCEDIR;

foreach $file (@gifs) {
  print "Linking " . $file . "\n";

  $result = link ("<#CLASSDIR#>/arlut/csd/ganymede/".$file, $file);

  if (!$result){
    print "$! -- $file\n";
  }
}

print "\nDone sync'ing admin_classes tree.\n\n";
