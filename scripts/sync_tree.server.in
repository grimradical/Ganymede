#!/opt/bin/perl5
#
# sync_tree
#
# This perl script is designed to create a tree of files
# suitable for jar'ing into a downloadable archive.  Only
# those files that the server needs are to be included.
#
# Jonathan Abbey 11 March 1998
#
#------------------------------------------------------------

$sourcedir = "<#TARGETDIR#>/arlut/csd/ganymede";
$targetdir = "<#TARGETDIR#>/server_classes/arlut/csd/ganymede";

print "\nLinking server classes\n\n";

# What directory are we handling?

chdir($targetdir);

# Clean it out

system("rm -rf *");

print "Linking client stub class\n\n";

# We need the ClientBase_Stub class so that we can talk to the client
# when it tries to connect to us

mkdir("client", 0770);
symlink("$sourcedir/client/ClientBase_Stub.class", "client/ClientBase_Stub.class");

# We want to link in all classes from the ganymede class directory, not including
# custom, client, loader, and other subordinate package directories

opendir SOURCEDIR, $sourcedir or die "couldn't open source dir";

# First get the list of normal (non-dir) files

@classes = grep -f, map "$sourcedir/$_", readdir SOURCEDIR;

# Now whittle off anything that's not a regular class file

@classes = grep /\.class$/, @classes;

closedir SOURCEDIR;

# And link em.

print "\nLinking individual classes in arlut.csd.ganymede to server_classes.\n\n";

foreach $file (@classes) {

  # Peel off the sourcedir prefix to get the simple file name

  $file =~ /^$sourcedir\/(.*)/;
  $basename = $1;

  print "Linking " . $basename . "\n";

  $result = link ($file, $basename);
  
  if (!$result){
    print "$! -- $file\n";
  }
}

print "\nDone sync'ing server_classes tree.\n";
