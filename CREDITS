Ganymede Release 1.0 prerelease 1
January 30, 2001
CREDITS
---------------------------------------------

Ganymede has been under development for over 5 years now, in both
planning and execution.  The work has primarily been performed in the
Computer Science Division of The Applied Research Laboratories, The
University of Texas at Austin, with support from CSD and ARL
management.

The development of Ganymede has benefited from the direct development
contributions of the following individuals:

--

 Jonathan Abbey, jonabbey@arlut.utexas.edu

Primary architect and coder on the project.  Developed the Ganymede
server and admin console, the table and tree GUI components used in
both the admin console and the primary client, the great bulk of the
project documentation (or lack thereof) as well as all of the CVS and
build script work.  Answers e-mail.

--

 Mike Mulvaney, mike@mulvaney.com

 Mike worked on Ganymede during his year and a half at the lab, from
February of 1997 through September of 1998, before moving to the
Washington D.C. area.  The client as it currently stands is primarily
Mike's work.  In addition to the large bulk of client-side coding,
Mike contributed significantly to the design of the system
architecture as a whole.  Ganymede would be a far, far poorer thing
were it not for Mike.

--

 Brian O'Mara, bom@alumni.utexas.net

 Brian worked on Ganymede during his tenure as a student employee at
ARL from February 1998 through August of 2000.  Brian created custom
icons for the Ganymede client and rewrote the permissions editor to
use more Swing classes, as well as creating the persona selection
dialog introduced in Ganymede 0.98.  Brian also reworked the Query
dialog to be more user-friendly.  During his last year at ARL, Brian
did an enormous amount of work in preparing for the ultimate
replacement of the old-style hosts_info DNS support with new code to
convert BIND files into an XML representation and back again, which
will be incorporated into a Ganymede schema kit sometime during 2001.

--

 Navin Manohar, navin.manohar@ac.com

 Navin worked on Ganymede from its inception in late 1995 through his
departure from the lab in April of 1997.  Navin contributed to initial
architecture design decisions during this time, as well as the initial
development of the client, including the basic framework within which
the client was developed.  He developed the excellent calendar GUI
component that is used in the client, as well as the more unobtrusive
but vital GUI components that the client uses for data entry, back
in the Java 1.0 days.

--

 Erik Grostic, butcher@auschron.com

 Erik worked on Ganymede from mid 1997 through his departure from the
lab in December of 1997.  Erik developed the GUI code for the
permissions editor and the query submission dialog,
helping bring the client into fruition.

--

 Dan Scott, dscott@arlut.utexas.edu

 Dan originated the GASH project, providing strategic vision and
architectural design to solve the essential problem of shared group
control over the lab's master NIS and DNS databases.  Dan has
contributed greatly to the higher level design issues in Ganymede, as
well as providing invaluable user interface design feedback and bug
reporting.  Neither Ganymede nor GASH could have been developed at all
without his support.

------

Within ARL, Gil Kloepfer provided design assistance on the networking
issues that Ganymede is going to need to address as the lab moves into
the 21st century.  Jay Scott contributed work on a new version of the
GASH schema's build kit (which is not yet included with the Ganymede
distribution).  GASH admins Glen Kronschnabl, Carrie Woodworth, Rich
Gramann, Andrew Helyer, Richard Mach, and others made helpful reports
on gaps and problems with Ganymede.

John Knutson has provided bug reports and code contributions in the
course of evaluating the Ganymede code for use on an SGL project.
Ganymede's support of floating point data fields came from John.

A lot of Ganymede is based on the experience and design work that went
into GASH.  In addition to the aforementioned names, Dean Kennedy and
Pug Bainter should be credited for their design work on GASH.  Pug
Bainter authored the original GASH makefiles that the Ganymede GASH
schema uses to propagate information from Ganymede into NIS and DNS.

Outside ARL, we have gotten very helpful bug reports and feedback
from:

Pug Bainter, pug@pug.net - lots of really good bug reports
Martin Schneider, martin@ira.uka.de - server customization bug reports
Michael McEniry, mmceniry@itsc.uah.edu - linux localhost patch
Christoph Litauer, litauer@uni-koblenz.de - xmlclient testing
Curtis King, curtis.king@cul.ca - detailed bug reports
Doug Floyd, dfloyd@io.com - bug reports and AIX testing
Matt Knopp, mhat@vorlon.com - FreeBSD testing, Sesame Chicken
Mike Clay, mclay@weareb.org - FreeBSD testing
Stephen L. Johnson, sjohnson@godzilla.monsters.org - bug reports
Matt Bush, xomox@netlag.com - beta testing, bug reports
Jher, jher@fnord.com - beta testing
Sheilagh O'Hare, martini@fc.net - design brilliance
Frederick Dickey, frederick.j.dickey@boeing.com - packaging bug report
Lewis Muhlenkamp, lewism@tt.comm.mot.com - packaging, client bug reports
Nikola Nedeljkovic, nikola@carbonix.iam.tu-clausthal.de - packaging reports
Andy Johnson, andyjohnson@engineer.com - build script bug reports
Charles Adams, charles.adams@central.sun.com - bug reports, debugging
Darrell Tippe, Darrell.Tippe@atcoitek.com - bug reports
Glen Joseph, gjoseph@us.ibm.com - installServer bug report
Chris McCraw, fool@dfw.net - bugzilla testing
Ido Dubrawsky, ido@globeset.com - testing
Michael Houle, michael.houle@atcoitek.com - many bug reports

--

The regular expression class library used in the server to provide regexp
search support is from the Free Software Foundation, and was written by
Wes Biggs <wes@cacas.org>.  The gnu-regexp-1.0.8.tar.gz archive included
in the src directory contains the complete distribution of this software.
See README and LICENSE files in this archive for more details.

The Java implementation of the standard UNIX crypt() function was
converted from C by John Dumas, jdumas@zgs.com, whose code can be
found at http://208.223.9.21/jfd/crypt.html.  jcrypt is included in
Ganymede by permission of the author.

The Qsmtp class was originally written by James Driscoll
(maus@io.com), and placed into the public domain.  See
http://www.io.com/~maus/JavaPage.html for details and additional free
Java code. Note that the version of Qstmp packaged with Ganymede has
been significantly modified, to provide more convenient use and
rudimentary MIME support.

Some of the MD5 classes used in the server were written by Santeri
Paavolainen, and are included in Ganymede under the terms of the GNU
General Public License.  See http://www.cs.hut.fi/~santtu/java/ for
more information.  The MD5Crypt class used to support FreeBSD-style
md5 passwords was originally written by Poul-Henning Kamp
(phk@login.dknet.dk) in C, and was translated into Java by Jonathan
Abbey.

The MD4 classes used to support Windows NT-compatible cryptographic
hashes were written by Harry Mantakos, harry@meretrix.com.  The MD4
classes came from Harry's JOTP project, which you can link to at
http://www.cs.umd.edu/users/harry/jotp/. The actual "LANMAN" and "NT
MD4 Unicode" hash support code was written by Andrew Tridgell and
released under the GPL as part of the Samba source code, and was
ported to Java by Jonathan Abbey, using Harry's MD4 code to perform
the fundamental cryptographic hash function.

The XML SAX reference classes and interfaces used by the Ganymede
server's XML parsing routines were written and released into the
public domain by David Meggison <david@megginson.com>.  More
information on the SAX standard for XML parsing can be found at the
SAX home page at http://www.megginson.com/SAX/.

The Ganymede server uses James Clark's excellent XMLWriter and XP
parser class libraries for XML generation and parsing.  Both are
copyright 1997, 1998 by James Clark, and are included in Ganymede in
accordance with his stated licensing terms.  See
http://www.jclark.com/xml/xp/index.html for information on the XP
parser.

